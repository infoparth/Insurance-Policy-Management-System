type Error = variant {
  NotFound : record { msg : text };
  InvalidOperation : record { msg : text };
};
type LifeInsurancePolicy = record {
  id : nat64;
  updated_at : opt nat64;
  policy_amount : opt nat64;
  policyholder_id : nat64;
  is_claimed : bool;
  created_at : nat64;
  tenure_years : nat32;
  is_active : bool;
};
type PolicyPayload = record {
  policy_amount : opt nat64;
  policyholder_id : nat64;
  tenure_years : nat32;
};
type Result = variant { Ok : LifeInsurancePolicy; Err : Error };
type Result_1 = variant { Ok : User; Err : Error };
type User = record {
  id : nat64;
  updated_at : opt nat64;
  username : text;
  role : UserRole;
  created_at : nat64;
  email : text;
};
type UserPayload = record { username : text; role : UserRole; email : text };
type UserRole = variant { Administrator; Policyholder; Agent };
service : {
  add_life_insurance_policy : (PolicyPayload) -> (opt LifeInsurancePolicy);
  add_user : (UserPayload) -> (opt User);
  claim_policy : (nat64) -> (Result);
  delete_life_insurance_policy : (nat64) -> (Result);
  delete_user : (nat64) -> (Result_1);
  get_life_insurance_policy : (nat64) -> (Result) query;
  get_user : (nat64) -> (Result_1) query;
  list_all_policies : () -> (vec LifeInsurancePolicy) query;
  list_all_users : () -> (vec User) query;
  update_life_insurance_policy : (nat64, PolicyPayload) -> (Result);
  update_user : (nat64, UserPayload) -> (Result_1);
}
